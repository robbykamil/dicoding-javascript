#1 FUNDAMENTAL JAVASCRIPT

- EXPRESSION = the code that have a value
               5; 2+3;
- STATEMENT = instructions for do something, ex. make a variable, loops, checking conditions, etc
              var myName; const phi; int age;
              
    /*
    let firstName;                //statement or declaration statement
    firstName = "Robby Kamil";    //assignment expression


    let lastName = "Siregar";
    const birthday = "18 Januari 1888";   //const cannot change a value of variable
    */


- DATA TYPES

    /*
    let x;
    console.log(typeof(x));  //output = undefined


    let angka = 10;
    let desimal = 17.34;
    console.log(typeof(angka));      //output = number
    console.log(typeof(desimal));    //output = number
    //the power of (**)


    let endIncrement = 10;
    console.log(endIncrement++);    //output = 10
    console.log(endIncrement);      //output = 11
    let frontIncrement = 20;
    console.log(++frontIncrement);  //output = 21


    let numberBigInt = 50n + 5n;
    console.log(numberBigInt);  //output = 55n, this is BigInt data types


    const answer = '"I think it\'s awesome!" he answered confidently';   //escape string using backslash (\)


    const nameStudent = "Robby";
    console.log(`Please Welcome to New Student, ${nameStudent}.`)  //string interpolation used backticks (`) to used string template


    const number1 = 10;
    const number2 = 12;
    let isGreater = number1 > number2;
    console.log(isGreater);             //boolean, output = false


    let dataSementara = null;
    console.log(dataSementara);  //output = null, digunakan ketika membuat variable namun belum memastikan tipe data apa yang pas digunakan


    const id1 = Symbol("id");
    const id2 = Symbol("id");
    console.log(id1==id2);    //output = false, "Symbol" Data Types umumnya digunakan sebagai nama property dari Object

    */


- OPERATOR

    /*

    x = y;   //assignment operator
    x += y;


    let num1 = 10
    let var1 = "10"
    console.log(num1 == var1);   //output = true
    console.log(num1 === var1);  //output = false


    let myNumber = 20;
    let yourNumber = 25;
    let otherNumber = 30;
    console.log(myNumber < yourNumber && otherNumber > yourNumber);  // (true && true) -> true
    console.log(myNumber < yourNumber || otherNumber = yourNumber);  // (true || false) -> false
    console.log(!(myNumber = 20);                                    // !(true) -> false

    */


- IF/ELSE STATEMENT

    /*

    const isCar = Mercedez;
    let carColor = null;
    if (isCar === "BMW") {
        carColor = "Black";
    } else if (isCar === "Jaguar") {
        carColor = "Blue";
    } else if (isCar === "Mercedez") {
        carColor = "Silver";
    } else {
        carColor = "White";
    }


    const isResident = false;
    let scholarship = isResident ? "You are not Eligible" : "You are Eligible";  // this is conditional expressions
    console.log(scholarship);                                                    // condition ? true expressions : false expressions


    const newStudent = "";                                 // Di Javascript ada yang disebut "truthy" dan "falsy".
    if (newStudent) {                                      // Ketika menuliskan expression yang tidak mengembalikan boolean,
        console.log("Hello, ${name}!);                     // hukum "truthy" dan "falsy" berlaku.
    } else {
        console.log("There's no a new student");           // output = There's no a new student
    }

    */


- SWITCH CASE STATEMENT

    /*

    const isCar = Mercedez;
    let carColor = null;

    switch (isCar) {
        case "BMW":
            carColor = "Black";
            break;
        case "Jaguar":
            carColor = "Blue";
            break;
        case "Mercedez":
            carColor = "Silver";
            break;
        default:
            carColor = "White";
    }

    */


- LOOP

    /*

    for(let i = 0; i <= 5; i++) {                   // for loop
        console.log(i);                             // inisialisasi variable; test kondisi; perubahan nilai variable
    }


    let friends = ["Paul", "Deni", "Desi", "Rio"];
    for(let friend of friends) {                    // for .. of loop
        console.log(friend);                        
    }


    let i = 0;
    while(i <= 5) {                                 // while loop
        console.log(i);
        i++
    }


    let j = 1;
    do {                                            // do .. while loop
        console.log(i);
        i++
    } while(i <= 5);
    
    
    //my practical
    for(left = 1; left <= 6; left++) {
        for(right = 1; right <= left; right++) {
          console.log(`[ ${left} | ${right} ]`);
        }
    }

    */
    

#2 DATA STRUCTURE (Javascript data types that can saved more complex data structure : Object, Array, Map, Set)

- OBJECT

    /*
    let user = {};  // data type of object



    const myProfile = {
      myName: "Ayatul Kamilah",
      age: 20,
      "student country": "Qatar",                              // used "" for a key that have a space
    };

    console.log(`A new student name is ${myProfile.myName}`);  // access a property of object
    myProfile["student country"] = "Malaysia";                 // change a value of key, that used ("")
    myProfile.city = "Sabah";                                  // if key is not found, it will added as new part of property
    delete myProfile.age;                                      // use DELETE keyword for delete a key and value

    console.log(myProfile);

    */


- ARRAY

    /*

    let myArray = ["Jakarta", 20, true, 17.45, "Solo"];

    console.log(myArray[3]);     //access data at array
    myArray.splice(1,3);         //splice(dari index, sampai index), menghapus data pada array

    myArray.push("BWS");         //will added at last array
    myArray.pop();               //will deleted at last array

    myArray.shift("Jakarta")     //will remove first data
    myArray.unshift("Mampang")   //will replace first data 

    console.log(myArray)


    */


- SPREAD OPERATOR (it used to combine two object or array into one)

    /*

    let kuartal1 = ["Jan", "Feb", "Mar"];
    let kuartal2 = ["Apr", "May", "Jun"];
    let semester1 = [...kuartal1,...kuartal2];
    console.log(semester1);

    console.log("------------------------");

    const hp1 = {
      merk: "HP",
      color: "Black",
      processor: "AMD",
    };

    const hp2 = {
      memory: "4 GB",
      battery: 1000,
    };

    const HP = {...hp1,...hp2};
    console.log(HP);

    */


#2 FUNCTION
	
    /*

    function minimal(a,b) {
        if(a < b || a === b) {
      return a;
        } else if(b < a) {
      return b;
        } 
    }

    function power(a,b) {
        return a**b;
    }

    */

#3 OBJECT-ORIENTED PROGRAMMING (OOP)

- CLASS

    /* 
    ~Concept of Class~
    class = cafe
    karakter = pembeli, penjual, pesanan
    kemampuan = pesan menu, menerima pesanan
    */


    /*
    ~Class with function syntac~
    function order() {
        this.menu1 = "Pizza";
        this.menu2 = "Pasta";
    };

    order.prototype.processOrder = function n(customer,queue) {
        console.log(`Cust Name : ${customer}\nQueue ${queue}`);
        console.log(`Your ${this.menu2} order is Being Process`);
    };

    const newOrder = new order();
    newOrder.processOrder("Abdul", 23);
    */


    /*
    ~ Class Syntac ~
    class order {
        constructor() {
      this.menu1 = "Pizza";
      this.menu2 = "Pasta";
        };

        processOrder(customer, queue) {
      console.log(`Cust Name: ${customer}\nQueue ${queue}`);
      console.log(`Your ${this.menu2} order is Being Process`);
        };
    }

    const newOrder = new order();
    newOrder.processOrder("Abdul", 25);
    */

